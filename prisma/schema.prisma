generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Apprentice {
  apprentice_id      Int               @id @default(autoincrement())
  pic                String
  first_name         String
  last_name          String
  phone              String               @db.VarChar(12)
  age                Int
  institution        String
  cnic               String?              @db.VarChar(13)
  guardian_name      String?
  guardian_cnic      String?              @db.VarChar(13)
  guardian_phone     String?              @db.VarChar(12)
  ApprenticeCert     ApprenticeCert[]
  ApprenticeCourses  ApprenticeCourses[]
  CourseTestimonials CourseTestimonials[]
  Enrollments        Enrollments[]
}

model ApprenticeCert {
  course_id     Int
  apprentice_id Int
  uri           String?
  Apprentice    Apprentice @relation(fields: [apprentice_id], references: [apprentice_id])
  Courses       Courses    @relation(fields: [course_id], references: [course_id])

  @@id([course_id, apprentice_id])
}

model ApprenticeCourses {
  course_id          Int
  apprentice_id      Int
  completed          Boolean?
  current_chapter_id Int
  current_section_id Int
  current_curr_id    Int
  startTime          DateTime   @default(now())
  endTime            DateTime?
  Apprentice         Apprentice @relation(fields: [apprentice_id], references: [apprentice_id])
  Courses            Courses    @relation(fields: [course_id], references: [course_id])
  Lesson             Lesson     @relation(fields: [current_chapter_id, current_curr_id, current_section_id], references: [section_id, curr_id, lesson_id])

  @@id([course_id, apprentice_id])
}

model CourseAnnouncements {
  announcement_id  Int   @default(0)
  course_id        Int
  announcement_desc String
  date             DateTime? @default(now())
  Courses          Courses  @relation(fields: [course_id], references: [course_id])

  @@id([course_id, announcement_id])
}

model CourseLO {
  course_id Int
  //this is the serial no of the learning outcomes assocaited with a course
  serialNo Int
  lo        String[]
  Courses   Courses @relation(fields: [course_id], references: [course_id])

  @@id([course_id, serialNo])
}

model CoursePreReq {
  course_id Int
  serialNo Int
  preReq    String
  Courses   Courses @relation(fields: [course_id], references: [course_id])

  @@id([course_id, serialNo])
}

model CourseSchedule {
  course_id Int   
  weekday   weekday
  starttime DateTime
  endtime   DateTime

  Courses   Courses  @relation(fields: [course_id], references: [course_id])

  @@id([course_id])
}

model CourseTag {
  course_id Int
  serialNo Int
  category  String
  Courses   Courses @relation(fields: [course_id], references: [course_id])

  @@id([course_id, serialNo])
}

model CourseTestimonials {
  course_id     Int
  serialNo Int
  testimonial   String
  apprentice_id Int
  Apprentice    Apprentice @relation(fields: [apprentice_id], references: [apprentice_id])
  Courses       Courses    @relation(fields: [course_id], references: [course_id])

  @@id([course_id, serialNo])
}

model Courses {
  course_id           Int                @id @default(autoincrement())
  mentor_id           Int?
  curriculum_id       Int?                   @unique
  difficulty_level    Int              
  rating              Float  
  announcementsNo     Int?               @default(0)
  ApprenticeCert      ApprenticeCert[]
  ApprenticeCourses   ApprenticeCourses[]
  CourseAnnouncements CourseAnnouncements[]
  CourseLO            CourseLO[]
  CoursePreReq        CoursePreReq[]
  CourseSchedule      CourseSchedule?
  CourseTag           CourseTag[]
  CourseTestimonials  CourseTestimonials[]
  Curriculum          Curriculum?            @relation(fields: [curriculum_id], references: [curr_id])
  Mentor              Mentor?                @relation(fields: [mentor_id], references: [mentor_id])
  Enrollments         Enrollments[]
}

model Curriculum {
  curr_id Int       @id @default(autoincrement())
  Courses Courses?
  Section Section[]
}

model Enrollments {
  course_id     Int
  apprentice_id Int
  Apprentice    Apprentice @relation(fields: [apprentice_id], references: [apprentice_id])
  Courses       Courses    @relation(fields: [course_id], references: [course_id])

  @@id([course_id, apprentice_id])
}

model Lesson {
  curr_id           Int
  section_id        Int
  lesson_id         Int
  uri               String
  title             String
  desc              String?
  ApprenticeCourses ApprenticeCourses[]
  Section           Section             @relation(fields: [section_id, curr_id], references: [section_id, curr_id])
  LessonResources   LessonResources[]

  @@id([curr_id, section_id, lesson_id])
}

model LessonResources {
  serialNo Int
  section_id Int
  curr_id    Int
  lesson_id  Int
  uri        String
  Lesson     Lesson @relation(fields: [section_id, curr_id, lesson_id], references: [section_id, curr_id, lesson_id])

  @@id([curr_id,section_id, lesson_id, serialNo])
}

model Mentor {
  mentor_id    Int        @id @default(autoincrement())
  first_name   String
  last_name    String
  email        String        @db.VarChar(320)
  phone        String        @db.VarChar(12)
  cnic         String        @db.VarChar(13)
  rating       Int
  Courses      Courses[]
  MentorSkill  MentorSkill[]
}

model MentorSkill {
  mentor_id Int
  skill_id  Int
  Mentor    Mentor @relation(fields: [mentor_id], references: [mentor_id])
  Skill     Skill  @relation(fields: [skill_id], references: [id])

  @@id([mentor_id, skill_id])
}

model Section {
  curr_id    Int
  section_id Int
  Lesson     Lesson[]
  Curriculum Curriculum  @relation(fields: [curr_id], references: [curr_id])
  SectionLO  SectionLO[]
  Test       Test[]

  @@id([curr_id, section_id])
}

// 
model SectionLO {
  serialNo Int
  lo         String[]
  section_id Int
  curr_id    Int
  Section    Section @relation(fields: [section_id, curr_id], references: [section_id, curr_id])

  @@id([curr_id,section_id,serialNo])
}

model Skill {
  id          Int        @id @default(autoincrement())
  skill       String        @unique
  MentorSkill MentorSkill[]
}

model Test {
  curr_id    Int
  section_id Int
  test_id  Int
  uri        String
  title      String
  desc       String?
  Section    Section @relation(fields: [section_id, curr_id], references: [section_id, curr_id])

  @@id([curr_id, section_id, test_id])
}

enum weekday {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}
