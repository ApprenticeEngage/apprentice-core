generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Mentor {
  mentor_id        String        @id @default(uuid())
  first_name       String
  last_name        String
  email            String        @db.VarChar(320)
  phone            String        @db.VarChar(12)
  cnic             String        @db.VarChar(13)
  rating           Float
  mentorRefCourses Courses[]
  mentorRef        MentorSkill[]
}

model Skill {
  id       String        @id @default(uuid())
  skill    String        @unique
  skillref MentorSkill[]
}

model MentorSkill {
  mentor_id String
  skill_id  String
  mentor    Mentor @relation(fields: [mentor_id], references: [mentor_id])
  skill     Skill  @relation(fields: [skill_id], references: [id])

  @@id([mentor_id, skill_id])
}

model Courses {
  course_id         String                @id @default(uuid())
  mentor_id         String
  difficulty_level  Int
  rating            Float
  curriculum_id     Int                   @unique
  apprenticeCert    ApprenticeCert[]
  apprenticeCourses ApprenticeCourses[]
  announcement      CourseAnnouncements[]
  lo                CourseLO[]
  preReq            CoursePreReq[]
  schedule          CourseSchedule?
  courseRef         CourseTag[]
  testimonial       CourseTestimonials[]
  curriculum        Curriculum            @relation(fields: [curriculum_id], references: [curr_id])
  mentor            Mentor                @relation(fields: [mentor_id], references: [mentor_id])
  enrollments       Enrollments[]
}

model CourseTag {
  id        String  @id @default(uuid())
  course_id String
  category  String
  course    Courses @relation(fields: [course_id], references: [course_id])
}

model CourseTestimonials {
  id            String     @id @default(uuid())
  course_id     String
  testimonial   String
  apprentice_id String
  apprentice    Apprentice @relation(fields: [apprentice_id], references: [apprentice_id])
  course        Courses    @relation(fields: [course_id], references: [course_id])
}

model CourseAnnouncements {
  announcement_id  Int
  course_id        String
  announcment_desc String
  date             DateTime
  course           Courses  @relation(fields: [course_id], references: [course_id])

  @@id([course_id, announcement_id])
}

model CourseLO {
  id        String  @id @default(uuid())
  course_id String
  lo        String
  course    Courses @relation(fields: [course_id], references: [course_id])
}

model CoursePreReq {
  id        String  @id @default(uuid())
  course_id String
  preReq    String
  course    Courses @relation(fields: [course_id], references: [course_id])
}

model CourseSchedule {
  id        String   @id @default(uuid())
  course_id String   @unique
  weekday   weekday
  starttime DateTime
  endtime   DateTime
  course    Courses  @relation(fields: [course_id], references: [course_id])
}

model Curriculum {
  curr_id  Int       @id @default(autoincrement())
  currRef  Courses?
  sections Section[]
}

model Section {
  curr_id    Int
  section_id Int
  lessons    Lesson[]
  curriculum Curriculum  @relation(fields: [curr_id], references: [curr_id])
  sectionRef SectionLO[]
  tests      Test[]

  @@id([curr_id, section_id])
}

model SectionLO {
  id         String  @id @default(uuid())
  lo         String
  section_id Int
  curr_id    Int
  section    Section @relation(fields: [section_id, curr_id], references: [section_id, curr_id])
}

model Lesson {
  curr_id           Int
  section_id        Int
  lesson_id         Int
  uri               String
  title             String
  desc              String?
  apprenticeCourses ApprenticeCourses[]
  section           Section             @relation(fields: [section_id, curr_id], references: [section_id, curr_id])
  lessRes           LessonResources[]

  @@id([curr_id, section_id, lesson_id])
}

model LessonResources {
  id         String @id @default(uuid())
  section_id Int
  curr_id    Int
  lesson_id  Int
  uri        String
  lessonRes  Lesson @relation(fields: [section_id, curr_id, lesson_id], references: [section_id, curr_id, lesson_id])
}

model Test {
  curr_id    Int
  section_id Int
  lesson_id  Int
  uri        String
  title      String
  desc       String?
  section    Section @relation(fields: [section_id, curr_id], references: [section_id, curr_id])

  @@id([curr_id, section_id, lesson_id])
}

model Enrollments {
  course_id     String
  apprentice_id String
  apprentice    Apprentice @relation(fields: [apprentice_id], references: [apprentice_id])
  course        Courses    @relation(fields: [course_id], references: [course_id])

  @@id([course_id, apprentice_id])
}

model Apprentice {
  apprentice_id     String               @id @default(uuid())
  pic               String
  first_name        String
  last_name         String
  phone             String               @db.VarChar(12)
  age               Int
  institution       String
  cnic              String?              @db.VarChar(13)
  guardian_name     String?
  guardian_cnic     String?              @db.VarChar(13)
  guardian_phone    String?              @db.VarChar(12)
  apprenticeCert    ApprenticeCert[]
  apprenticeCourses ApprenticeCourses[]
  apprenticeRef     CourseTestimonials[]
  enrollement       Enrollments[]
}

model ApprenticeCourses {
  course_id          String
  apprentice_id      String
  completed          Boolean?
  current_chapter_id Int
  current_section_id Int
  current_curr_id    Int
  startTime          DateTime   @default(now())
  endTime            DateTime?
  apprentice         Apprentice @relation(fields: [apprentice_id], references: [apprentice_id])
  course             Courses    @relation(fields: [course_id], references: [course_id])
  current_lesson     Lesson     @relation(fields: [current_chapter_id, current_curr_id, current_section_id], references: [section_id, curr_id, lesson_id])

  @@id([course_id, apprentice_id])
}

model ApprenticeCert {
  course_id     String
  apprentice_id String
  uri           String?
  apprentice    Apprentice @relation(fields: [apprentice_id], references: [apprentice_id])
  course        Courses    @relation(fields: [course_id], references: [course_id])

  @@id([course_id, apprentice_id])
}

enum weekday {
  Monday
  Tuesday
  Wednesday
  Thursday
  Friday
  Saturday
  Sunday
}
